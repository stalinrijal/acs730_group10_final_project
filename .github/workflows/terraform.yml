name: Terraform CI/CD

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1  # Replace with your desired AWS region

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Replace with your desired Terraform version

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform/

      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform/

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform/
        env:
          TF_VAR_some_variable: ${{ secrets.TF_VAR_SOME_VARIABLE }}  # Replace with any environment variables required by your Terraform configuration

      - name: Terraform Approval
        run: echo "No approval step required"  # You might want to implement a manual approval step or another mechanism for approval
      
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip3 install ansible

      - name: Download File from S3
        run: |
          mkdir -p ~/images
          aws s3 cp s3://acs730-group10-bucket/images/sample.jpg ~/images/sample.jpg
      
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          if [ ! -f ~/.ssh/linux.pem ]; then
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/linux.pem
           else
            echo "SSH private key already exists at ~/.ssh/linux.pem"
          fi
          chmod 400 ~/.ssh/linux.pem
          

      - name: SSH into EC2
        run: |
          ssh -i ~/.ssh/linux.pem ec2-user@54.211.251.224 'echo "Connected successfully"'
      
      - name: Run Ansible Playbook
        run: ansible-playbook ansible/myplaybook.yml -i ansible/hosts.txt
        working-directory: ./